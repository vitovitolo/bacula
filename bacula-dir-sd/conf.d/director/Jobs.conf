# Author: https://github.com/vitovitolo
##########################################################
########### COMMON JOBS DEFINITION #######################
##########################################################

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = baculaserver
  FileSet = "Full Set"
  Schedule = "WeeklyCycle"
  Storage = NAS
  Messages = Standard
  Pool = File
  Priority = 10
  Write Bootstrap = "/var/lib/bacula/%c.bsr"
}

JobDefs {
  Name = "DefaultIncr"
  Type = Backup
  Level = Incremental
#  Storage = NAS
  Messages = Standard
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
}

JobDefs {
  Name = "DefaultFull"
  Type = Backup
  Level = Full
#  Storage = NAS
  Messages = Standard
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
}


##########################################################
########### DEFAULT JOBS DEFINITION ######################
##########################################################


#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /nonexistant/path/to/file/archive/dir
#Job {
#  Name = "BackupClient1"
#  JobDefs = "DefaultJob"
#}

#Job {
#  Name = "BackupClient2"
#  Client = baculaserver2-fd
#  JobDefs = "DefaultJob"
#}

# Backup the catalog database (after the nightly save)
#Job {
#  Name = "BackupCatalog"
#  JobDefs = "DefaultJob"
#  Level = Full
#  FileSet="Catalog"
#  Schedule = "WeeklyCycleAfterBackup"
#  # This creates an ASCII copy of the catalog
#  # Arguments to make_catalog_backup.pl are:
#  #  make_catalog_backup.pl <catalog-name>
#  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
#  # This deletes the copy of the catalog
#  RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
#  Write Bootstrap = "/var/lib/bacula/%n.bsr"
#  Priority = 11                   # run after main backup
#}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=baculaserver
  FileSet="Full Set"
  Storage = NAS
  Pool = Default
  Messages = Standard
  Where = /nonexistant/path/to/file/archive/dir/bacula-restores
}


##########################################################
################# MANUAL JOBS DEFS #######################
##########################################################


################# BACULA SERVER #######################
Job {
  Name = "baculaserver_etc_incr"
  Schedule = "Med_Weekly_Inc_1"
  JobDefs = "DefaultIncr"
  Client = baculaserver
  FileSet = "linux_etc"
  Pool = baculaserver_incr
  Storage = baculaserver_storage
}

Job {
  Name = "baculaserver_etc_full"
  Schedule = "Med_Monthly_Full_1"
  JobDefs = "DefaultFull"
  Client = baculaserver
  FileSet = "linux_etc"
  Pool = baculaserver_full
  Storage = baculaserver_storage
}

Job {
  Name = "baculaserver_bacula_catalog_full"
  Schedule = "High_Weekly_Full_1"
  JobDefs = "DefaultFull"
  Client = baculaserver
  FileSet = "Catalog"
  Pool = baculaserver_full
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
  Storage = baculaserver_storage
}

Job {
  Name = "baculaserver_log_remote_full"
  Schedule = "Med_Monthly_Full_1"
  JobDefs = "DefaultFull"
  Client = baculaserver
  FileSet = "linux_log_remote"
  Pool = baculaserver_full
  Storage = baculaserver_storage
}

Job {
  Name = "baculaserver_svn_confs_full"
  Schedule = "High_Weekly_Full_7"
  JobDefs = "DefaultFull"
  Client = baculaserver
  FileSet = "linux_svn"
  Pool = baculaserver_full
  Storage = baculaserver_storage
  Client Run Before Job = /etc/bacula/scripts/svn/svn-confs-backup.sh
  Client Run After Job = /etc/bacula/scripts/cleanup_backups_dir.sh
}



Job {
  Name = "server2_svn_full"
  Schedule = "High_Weekly_Full_7"
  JobDefs = "DefaultFull"
  Client = server2
  FileSet = "linux_svn"
  Pool = server2_full
  Storage = server2_storage
  Client Run Before Job = /etc/bacula/scripts/svn/svn-backup.sh
  Client Run After Job = /etc/bacula/scripts/cleanup_backups_dir.sh

}

Job {
  Name = "other_postgresql_full"
  Schedule = "High_Weekly_Full_6"
  JobDefs = "DefaultFull"
  Client = other
  FileSet = "linux_postgresql_scint"
  Pool = other_full
  Storage = other_storage
  Client Run Before Job = /etc/bacula/scripts/postgresql/postgresql_backup.sh
  Client Run After Job = /etc/bacula/scripts/cleanup_backups_dir.sh
}


Job {
  Name = "server3_svn_full"
  Schedule = "High_Weekly_Full_2"
  JobDefs = "DefaultFull"
  Client = server3
  FileSet = "linux_svn"
  Pool = server3_full
  Storage = server3_storage
  Client Run Before Job = /etc/bacula/scripts/svn/svn-backup.sh
  Client Run After Job = /etc/bacula/scripts/cleanup_backups_dir.sh
}

################# server3 #######################

Job {
  Name = "server3_mysql_full"
  Schedule = "High_Weekly_Full_3"
  JobDefs = "DefaultFull"
  Client = server3
  FileSet = "linux_mysql"
  Pool = server3_full
  Storage = server3_storage
  Client Run Before Job = /etc/bacula/scripts/mysql/mysql-redmine-wiki-backup.sh
  Client Run After Job = /etc/bacula/scripts/cleanup_backups_dir.sh
}
